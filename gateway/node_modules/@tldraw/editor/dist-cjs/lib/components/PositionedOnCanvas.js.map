{
  "version": 3,
  "sources": ["../../../src/lib/components/PositionedOnCanvas.tsx"],
  "sourcesContent": ["import { track } from '@tldraw/state'\nimport classNames from 'classnames'\nimport { HTMLProps, useLayoutEffect, useRef } from 'react'\nimport { useEditor } from '../hooks/useEditor'\n\n/** @public */\nexport const PositionedOnCanvas = track(function PositionedOnCanvas({\n\tx: offsetX = 0,\n\ty: offsetY = 0,\n\trotation = 0,\n\t...rest\n}: {\n\tx?: number\n\ty?: number\n\trotation?: number\n} & HTMLProps<HTMLDivElement>) {\n\tconst editor = useEditor()\n\tconst rContainer = useRef<HTMLDivElement>(null)\n\tconst camera = editor.getCamera()\n\n\tuseLayoutEffect(() => {\n\t\tconst { x, y, z } = editor.getCamera()\n\t\tconst elm = rContainer.current\n\t\tif (!elm) return\n\t\tif (x === undefined) return\n\n\t\telm.style.transform = `translate(${x}px, ${y}px) scale(${z}) rotate(${rotation}rad) translate(${offsetX}px, ${offsetY}px)`\n\t}, [camera, editor, offsetX, offsetY, rotation])\n\n\treturn <div ref={rContainer} {...rest} className={classNames('tl-positioned', rest.className)} />\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BQ;AA7BR,mBAAsB;AACtB,wBAAuB;AACvB,mBAAmD;AACnD,uBAA0B;AAGnB,MAAM,yBAAqB,oBAAM,SAASA,oBAAmB;AAAA,EACnE,GAAG,UAAU;AAAA,EACb,GAAG,UAAU;AAAA,EACb,WAAW;AAAA,EACX,GAAG;AACJ,GAI+B;AAC9B,QAAM,aAAS,4BAAU;AACzB,QAAM,iBAAa,qBAAuB,IAAI;AAC9C,QAAM,SAAS,OAAO,UAAU;AAEhC,oCAAgB,MAAM;AACrB,UAAM,EAAE,GAAG,GAAG,EAAE,IAAI,OAAO,UAAU;AACrC,UAAM,MAAM,WAAW;AACvB,QAAI,CAAC;AAAK;AACV,QAAI,MAAM;AAAW;AAErB,QAAI,MAAM,YAAY,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,QAAQ,kBAAkB,OAAO,OAAO,OAAO;AAAA,EACtH,GAAG,CAAC,QAAQ,QAAQ,SAAS,SAAS,QAAQ,CAAC;AAE/C,SAAO,4CAAC,SAAI,KAAK,YAAa,GAAG,MAAM,eAAW,kBAAAC,SAAW,iBAAiB,KAAK,SAAS,GAAG;AAChG,CAAC;",
  "names": ["PositionedOnCanvas", "classNames"]
}
