{
  "version": 3,
  "sources": ["../../../../src/lib/editor/managers/UserPreferencesManager.ts"],
  "sourcesContent": ["import { computed } from '@tldraw/state'\nimport {\n\tTLUserPreferences,\n\tdefaultUserPreferences,\n\tuserPrefersDarkUI,\n} from '../../config/TLUserPreferences'\nimport { TLUser } from '../../config/createTLUser'\n\nexport class UserPreferencesManager {\n\tconstructor(private readonly user: TLUser, private readonly inferDarkMode: boolean) {}\n\n\tupdateUserPreferences = (userPreferences: Partial<TLUserPreferences>) => {\n\t\tthis.user.setUserPreferences({\n\t\t\t...this.user.userPreferences.get(),\n\t\t\t...userPreferences,\n\t\t})\n\t}\n\t@computed getUserPreferences() {\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tname: this.getName(),\n\t\t\tlocale: this.getLocale(),\n\t\t\tcolor: this.getColor(),\n\t\t\tisDarkMode: this.getIsDarkMode(),\n\t\t\tanimationSpeed: this.getAnimationSpeed(),\n\t\t\tisSnapMode: this.getIsSnapMode(),\n\t\t}\n\t}\n\t/**\n\t * @deprecated use `getUserPreferences` instead\n\t */\n\tget userPreferences() {\n\t\treturn this.getUserPreferences()\n\t}\n\n\t@computed getIsDarkMode() {\n\t\treturn (\n\t\t\tthis.user.userPreferences.get().isDarkMode ??\n\t\t\t(this.inferDarkMode ? userPrefersDarkUI() : false)\n\t\t)\n\t}\n\n\t/**\n\t * @deprecated use `getIsDarkMode` instead\n\t */\n\tget isDarkMode() {\n\t\treturn this.getIsDarkMode()\n\t}\n\n\t@computed getAnimationSpeed() {\n\t\treturn this.user.userPreferences.get().animationSpeed ?? defaultUserPreferences.animationSpeed\n\t}\n\n\t/**\n\t * @deprecated use `getAnimationSpeed` instead\n\t */\n\tget animationSpeed() {\n\t\treturn this.getAnimationSpeed()\n\t}\n\n\t@computed getId() {\n\t\treturn this.user.userPreferences.get().id\n\t}\n\n\t/**\n\t * @deprecated use `getId` instead\n\t */\n\tget id() {\n\t\treturn this.getId()\n\t}\n\n\t@computed getName() {\n\t\treturn this.user.userPreferences.get().name ?? defaultUserPreferences.name\n\t}\n\n\t/**\n\t * @deprecated use `getName` instead\n\t */\n\tget name() {\n\t\treturn this.getName()\n\t}\n\n\t@computed getLocale() {\n\t\treturn this.user.userPreferences.get().locale ?? defaultUserPreferences.locale\n\t}\n\n\t/**\n\t * @deprecated use `getLocale` instead\n\t */\n\tget locale() {\n\t\treturn this.getLocale()\n\t}\n\n\t@computed getColor() {\n\t\treturn this.user.userPreferences.get().color ?? defaultUserPreferences.color\n\t}\n\n\t/**\n\t * @deprecated use `getColor` instead\n\t */\n\tget color() {\n\t\treturn this.getColor()\n\t}\n\n\t@computed getIsSnapMode() {\n\t\treturn this.user.userPreferences.get().isSnapMode ?? defaultUserPreferences.isSnapMode\n\t}\n\n\t/**\n\t * @deprecated use `getIsSnapMode` instead\n\t */\n\tget isSnapMode() {\n\t\treturn this.getIsSnapMode()\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,+BAIO;AAGA,MAAM,uBAAuB;AAAA,EACnC,YAA6B,MAA+B,eAAwB;AAAvD;AAA+B;AAAA,EAAyB;AAAA,EAErF,wBAAwB,CAAC,oBAAgD;AACxE,SAAK,KAAK,mBAAmB;AAAA,MAC5B,GAAG,KAAK,KAAK,gBAAgB,IAAI;AAAA,MACjC,GAAG;AAAA,IACJ,CAAC;AAAA,EACF;AAAA,EACU,qBAAqB;AAC9B,WAAO;AAAA,MACN,IAAI,KAAK,MAAM;AAAA,MACf,MAAM,KAAK,QAAQ;AAAA,MACnB,QAAQ,KAAK,UAAU;AAAA,MACvB,OAAO,KAAK,SAAS;AAAA,MACrB,YAAY,KAAK,cAAc;AAAA,MAC/B,gBAAgB,KAAK,kBAAkB;AAAA,MACvC,YAAY,KAAK,cAAc;AAAA,IAChC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,kBAAkB;AACrB,WAAO,KAAK,mBAAmB;AAAA,EAChC;AAAA,EAEU,gBAAgB;AACzB,WACC,KAAK,KAAK,gBAAgB,IAAI,EAAE,eAC/B,KAAK,oBAAgB,4CAAkB,IAAI;AAAA,EAE9C;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,aAAa;AAChB,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEU,oBAAoB;AAC7B,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE,kBAAkB,gDAAuB;AAAA,EACjF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,iBAAiB;AACpB,WAAO,KAAK,kBAAkB;AAAA,EAC/B;AAAA,EAEU,QAAQ;AACjB,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,KAAK;AACR,WAAO,KAAK,MAAM;AAAA,EACnB;AAAA,EAEU,UAAU;AACnB,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE,QAAQ,gDAAuB;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACV,WAAO,KAAK,QAAQ;AAAA,EACrB;AAAA,EAEU,YAAY;AACrB,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE,UAAU,gDAAuB;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,SAAS;AACZ,WAAO,KAAK,UAAU;AAAA,EACvB;AAAA,EAEU,WAAW;AACpB,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE,SAAS,gDAAuB;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAQ;AACX,WAAO,KAAK,SAAS;AAAA,EACtB;AAAA,EAEU,gBAAgB;AACzB,WAAO,KAAK,KAAK,gBAAgB,IAAI,EAAE,cAAc,gDAAuB;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,aAAa;AAChB,WAAO,KAAK,cAAc;AAAA,EAC3B;AACD;AAjGW;AAAA,EAAT;AAAA,GATW,uBASF;AAkBA;AAAA,EAAT;AAAA,GA3BW,uBA2BF;AAcA;AAAA,EAAT;AAAA,GAzCW,uBAyCF;AAWA;AAAA,EAAT;AAAA,GApDW,uBAoDF;AAWA;AAAA,EAAT;AAAA,GA/DW,uBA+DF;AAWA;AAAA,EAAT;AAAA,GA1EW,uBA0EF;AAWA;AAAA,EAAT;AAAA,GArFW,uBAqFF;AAWA;AAAA,EAAT;AAAA,GAhGW,uBAgGF;",
  "names": []
}
