{
  "version": 3,
  "sources": ["../../../../src/lib/ui/components/HelpMenu.tsx"],
  "sourcesContent": ["import { Content, Portal, Root, Trigger } from '@radix-ui/react-dropdown-menu'\nimport { useContainer } from '@tldraw/editor'\nimport * as React from 'react'\nimport { TLUiMenuChild } from '../hooks/menuHelpers'\nimport { useHelpMenuSchema } from '../hooks/useHelpMenuSchema'\nimport { useMenuIsOpen } from '../hooks/useMenuIsOpen'\nimport { useReadonly } from '../hooks/useReadonly'\nimport { TLUiTranslationKey } from '../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport { TLUiIconType } from '../icon-types'\nimport { LanguageMenu } from './LanguageMenu'\nimport { Button } from './primitives/Button'\nimport * as M from './primitives/DropdownMenu'\n\ninterface HelpMenuLink {\n\tlabel: TLUiTranslationKey | Exclude<string, TLUiTranslationKey>\n\ticon: TLUiIconType | Exclude<string, TLUiIconType>\n\turl: string\n}\n\n/** @internal */\nexport interface HelpMenuProps {\n\tlinks?: HelpMenuLink[]\n}\n\n/** @internal */\nexport const HelpMenu = React.memo(function HelpMenu() {\n\tconst container = useContainer()\n\tconst msg = useTranslation()\n\tconst [isOpen, onOpenChange] = useMenuIsOpen('help menu')\n\n\treturn (\n\t\t<div className=\"tlui-help-menu\">\n\t\t\t<Root dir=\"ltr\" open={isOpen} onOpenChange={onOpenChange} modal={false}>\n\t\t\t\t<Trigger asChild dir=\"ltr\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"help\"\n\t\t\t\t\t\tclassName=\"tlui-button\"\n\t\t\t\t\t\tsmallIcon\n\t\t\t\t\t\ttitle={msg('help-menu.title')}\n\t\t\t\t\t\ticon=\"question-mark\"\n\t\t\t\t\t/>\n\t\t\t\t</Trigger>\n\t\t\t\t<Portal container={container}>\n\t\t\t\t\t<Content\n\t\t\t\t\t\tclassName=\"tlui-menu\"\n\t\t\t\t\t\tside=\"top\"\n\t\t\t\t\t\tsideOffset={8}\n\t\t\t\t\t\talign=\"end\"\n\t\t\t\t\t\talignOffset={0}\n\t\t\t\t\t\tcollisionPadding={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t<HelpMenuContent />\n\t\t\t\t\t</Content>\n\t\t\t\t</Portal>\n\t\t\t</Root>\n\t\t</div>\n\t)\n})\n\nfunction HelpMenuContent() {\n\tconst menuSchema = useHelpMenuSchema()\n\n\tconst isReadonly = useReadonly()\n\n\tfunction getHelpMenuItem(item: TLUiMenuChild) {\n\t\tif (!item) return null\n\t\tif (isReadonly && !item.readonlyOk) return null\n\n\t\tswitch (item.type) {\n\t\t\tcase 'custom': {\n\t\t\t\tif (item.id === 'LANGUAGE_MENU') {\n\t\t\t\t\treturn <LanguageMenu key=\"item\" />\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'group': {\n\t\t\t\treturn (\n\t\t\t\t\t<M.Group size=\"small\" key={item.id}>\n\t\t\t\t\t\t{item.children.map(getHelpMenuItem)}\n\t\t\t\t\t</M.Group>\n\t\t\t\t)\n\t\t\t}\n\t\t\tcase 'submenu': {\n\t\t\t\treturn (\n\t\t\t\t\t<M.Sub id={`help menu ${item.id}`} key={item.id}>\n\t\t\t\t\t\t<M.SubTrigger label={item.label} />\n\t\t\t\t\t\t<M.SubContent>{item.children.map(getHelpMenuItem)}</M.SubContent>\n\t\t\t\t\t</M.Sub>\n\t\t\t\t)\n\t\t\t}\n\t\t\tcase 'item': {\n\t\t\t\tconst { id, kbd, label, onSelect, icon } = item.actionItem\n\t\t\t\treturn (\n\t\t\t\t\t<M.Item\n\t\t\t\t\t\ttype=\"menu\"\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tkbd={kbd}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tonClick={() => onSelect('help-menu')}\n\t\t\t\t\t\ticonLeft={icon}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn <>{menuSchema.map(getHelpMenuItem)}</>\n}\n"],
  "mappings": "AAiCG,SA0EK,UAxEH,KAFF;AAjCH,SAAS,SAAS,QAAQ,MAAM,eAAe;AAC/C,SAAS,oBAAoB;AAC7B,YAAY,WAAW;AAEvB,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,mBAAmB;AAE5B,SAAS,sBAAsB;AAE/B,SAAS,oBAAoB;AAC7B,SAAS,cAAc;AACvB,YAAY,OAAO;AAcZ,MAAM,WAAW,MAAM,KAAK,SAASA,YAAW;AACtD,QAAM,YAAY,aAAa;AAC/B,QAAM,MAAM,eAAe;AAC3B,QAAM,CAAC,QAAQ,YAAY,IAAI,cAAc,WAAW;AAExD,SACC,oBAAC,SAAI,WAAU,kBACd,+BAAC,QAAK,KAAI,OAAM,MAAM,QAAQ,cAA4B,OAAO,OAChE;AAAA,wBAAC,WAAQ,SAAO,MAAC,KAAI,OACpB;AAAA,MAAC;AAAA;AAAA,QACA,MAAK;AAAA,QACL,WAAU;AAAA,QACV,WAAS;AAAA,QACT,OAAO,IAAI,iBAAiB;AAAA,QAC5B,MAAK;AAAA;AAAA,IACN,GACD;AAAA,IACA,oBAAC,UAAO,WACP;AAAA,MAAC;AAAA;AAAA,QACA,WAAU;AAAA,QACV,MAAK;AAAA,QACL,YAAY;AAAA,QACZ,OAAM;AAAA,QACN,aAAa;AAAA,QACb,kBAAkB;AAAA,QAElB,8BAAC,mBAAgB;AAAA;AAAA,IAClB,GACD;AAAA,KACD,GACD;AAEF,CAAC;AAED,SAAS,kBAAkB;AAC1B,QAAM,aAAa,kBAAkB;AAErC,QAAM,aAAa,YAAY;AAE/B,WAAS,gBAAgB,MAAqB;AAC7C,QAAI,CAAC;AAAM,aAAO;AAClB,QAAI,cAAc,CAAC,KAAK;AAAY,aAAO;AAE3C,YAAQ,KAAK,MAAM;AAAA,MAClB,KAAK,UAAU;AACd,YAAI,KAAK,OAAO,iBAAiB;AAChC,iBAAO,oBAAC,kBAAiB,MAAO;AAAA,QACjC;AACA;AAAA,MACD;AAAA,MACA,KAAK,SAAS;AACb,eACC,oBAAC,EAAE,OAAF,EAAQ,MAAK,SACZ,eAAK,SAAS,IAAI,eAAe,KADR,KAAK,EAEhC;AAAA,MAEF;AAAA,MACA,KAAK,WAAW;AACf,eACC,qBAAC,EAAE,KAAF,EAAM,IAAI,aAAa,KAAK,EAAE,IAC9B;AAAA,8BAAC,EAAE,YAAF,EAAa,OAAO,KAAK,OAAO;AAAA,UACjC,oBAAC,EAAE,YAAF,EAAc,eAAK,SAAS,IAAI,eAAe,GAAE;AAAA,aAFX,KAAK,EAG7C;AAAA,MAEF;AAAA,MACA,KAAK,QAAQ;AACZ,cAAM,EAAE,IAAI,KAAK,OAAO,UAAU,KAAK,IAAI,KAAK;AAChD,eACC;AAAA,UAAC,EAAE;AAAA,UAAF;AAAA,YACA,MAAK;AAAA,YAEL;AAAA,YACA;AAAA,YACA,SAAS,MAAM,SAAS,WAAW;AAAA,YACnC,UAAU;AAAA;AAAA,UAJL;AAAA,QAKN;AAAA,MAEF;AAAA,IACD;AAAA,EACD;AAEA,SAAO,gCAAG,qBAAW,IAAI,eAAe,GAAE;AAC3C;",
  "names": ["HelpMenu"]
}
